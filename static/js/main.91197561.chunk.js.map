{"version":3,"sources":["components/Autocomplete.tsx","data/people.ts","App.tsx","index.tsx"],"names":["Gender","Autocomplete","people","delay","onSelected","useState","query","setQuery","appliedQuery","setAppliedQuery","isListShown","setIsListShown","applyQuery","useCallback","debounce","value","filteredPeople","useMemo","normalizedValue","trim","toLowerCase","filter","person","name","includes","className","cn","type","placeholder","onChange","event","inputValue","target","onFocus","onBlur","length","role","map","href","onMouseDown","selectedPerson","preventDefault","sex","Male","Female","slug","peopleFromServer","born","died","fatherName","motherName","App","setSelectedPerson","ReactDOM","render","document","getElementById"],"mappings":"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,iCAER,CACEtB,KAAM,uBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZL,KAAM,6BAER,CACEtB,KAAM,wBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZL,KAAM,8BAER,CACEtB,KAAM,mBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACEtB,KAAM,0BACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZL,KAAM,gCAER,CACEtB,KAAM,oBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZL,KAAM,0BAER,CACEtB,KAAM,mBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,yBAER,CACEtB,KAAM,sBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACEtB,KAAM,gBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZL,KAAM,sBAER,CACEtB,KAAM,2BACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZL,KAAM,iCAER,CACEtB,KAAM,iBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZL,KAAM,uBAER,CACEtB,KAAM,mBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZL,KAAM,yBAER,CACEtB,KAAM,iBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,uBAER,CACEtB,KAAM,mBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,yBAER,CACEtB,KAAM,mBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZL,KAAM,yBAER,CACEtB,KAAM,kBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZL,KAAM,wBAER,CACEtB,KAAM,yBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZL,KAAM,+BAER,CACEtB,KAAM,kBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZL,KAAM,wBAER,CACEtB,KAAM,uBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,6BAER,CACEtB,KAAM,iBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZL,KAAM,uBAER,CACEtB,KAAM,sBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZL,KAAM,4BAER,CACEtB,KAAM,kBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZL,KAAM,wBAER,CACEtB,KAAM,mBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZL,KAAM,yBAER,CACEtB,KAAM,gBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZL,KAAM,sBAER,CACEtB,KAAM,iBACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZL,KAAM,uBAER,CACEtB,KAAM,cACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZL,KAAM,oBAER,CACEtB,KAAM,gCACNmB,IAAK,IACLK,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZL,KAAM,uCC1VGM,G,MAAgB,WAC3B,MAA4C9C,mBAAwB,MAApE,mBAAOmC,EAAP,KAAuBY,EAAvB,KAEA,EAIIZ,GAAkB,CAAEjB,KAAM,GAAIwB,KAAM,GAAIC,KAAM,IAHhDzB,EADF,EACEA,KACAwB,EAFF,EAEEA,KACAC,EAHF,EAGEA,KAGF,OACE,uBAAMvB,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACGe,EAAc,UACRjB,EADQ,aACCwB,EADD,cACWC,EADX,KAEX,uBAGN,cAAC,EAAD,CACE9C,OAAQ4C,EACR3C,MAAO,IACPC,WAAYgD,MAInB,GC1BDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.91197561.chunk.js","sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\n\ninterface Props {\n  people: Person[]\n  delay: number\n  onSelected: (person: Person | null) => void\n}\n\nenum Gender {\n  Male = 'm',\n  Female = 'f',\n}\n\nexport const Autocomplete: React.FC<Props> = ({\n  people,\n  delay,\n  onSelected,\n}) => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [isListShown, setIsListShown] = useState(false);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const applyQuery = useCallback(\n    debounce((value: string) => {\n      setAppliedQuery(value);\n      setIsListShown(true);\n    }, delay),\n    [],\n  );\n\n  const filteredPeople = useMemo(() => {\n    const normalizedValue = appliedQuery.trim().toLowerCase();\n\n    return people\n      .filter(person => person.name.toLowerCase().includes(normalizedValue));\n  }, [appliedQuery, people]);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value.trim().toLowerCase();\n\n    if (!inputValue) {\n      onSelected(null);\n    }\n\n    setIsListShown(false);\n    applyQuery(inputValue);\n\n    setQuery(event.target.value);\n  };\n\n  const handleInputSelect = (selectedPerson: Person) => {\n    setQuery(selectedPerson.name);\n    onSelected(selectedPerson);\n    setIsListShown(false);\n  };\n\n  return (\n    <div className={cn(\n      'dropdown',\n      { 'is-active': isListShown },\n    )}\n    >\n      <div className=\"dropdown-trigger\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Enter a part of the name\"\n          value={query}\n          onChange={handleQueryChange}\n          onFocus={() => setIsListShown(true)}\n          onBlur={() => setIsListShown(false)}\n        />\n      </div>\n\n      {isListShown && !!people.length && (\n        <div className=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {!filteredPeople.length\n              ? (\n                <div className=\"dropdown-item\">\n                  <p>\n                    No matching suggestions\n                  </p>\n                </div>\n              )\n              : filteredPeople.map(person => {\n                return (\n                  <div\n                    className=\"dropdown-item\"\n                    key={person.slug}\n                  >\n                    <a\n                      href=\"/\"\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        handleInputSelect(person);\n                      }}\n                      className={cn(\n                        { 'has-text-link': person.sex === Gender.Male },\n                        { 'has-text-danger': person.sex === Gender.Female },\n                      )}\n                    >\n                      {person.name}\n                    </a>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useState } from 'react';\nimport { Autocomplete } from './components';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n\n  const {\n    name,\n    born,\n    died,\n  } = selectedPerson || { name: '', born: '', died: '' };\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson\n          ? `${name} (${born} - ${died})`\n          : 'No selected person'}\n      </h1>\n\n      <Autocomplete\n        people={peopleFromServer}\n        delay={1000}\n        onSelected={setSelectedPerson}\n      />\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}